projectName: ovh

binderhub:
  config:
    BinderHub:
      pod_quota: 60
      hub_url: https://hub-binder.mybinder.ovh
      badge_base_url: https://mybinder.org
      sticky_builds: true
      # docker hub registry for OVH
      use_registry: true
      image_prefix: binderhubovh/ovhbhub-

  replicas: 1

  extraVolumes:
    - name: secrets
      secret:
        secretName: events-archiver-secrets
  extraVolumeMounts:
    - name: secrets
      mountPath: /secrets
      readOnly: true
  extraEnv:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /secrets/service-account.json

  ingress:
    enabled: true
    https:
      enabled: true
      type: manual
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'false'
    hosts:
      - binder.mybinder.ovh
    tls:
      - secretName: tls-crt
        hosts:
          - binder.mybinder.ovh

  jupyterhub:
    singleuser:
      imagePullSecret:
        enabled: true
        registry: https://index.docker.io/v1/
        username: binderhubovh
        email: betatim+ovhhub@gmail.com

    proxy:
      https:
        type: offload


    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: 'false'
      hosts:
        - hub-binder.mybinder.ovh
      tls:
        - secretName: tls-crt
          hosts:
            - hub-binder.mybinder.ovh

    scheduling:
      userScheduler:
        enabled: false
      podPriority:
        enabled: true
      userPlaceholder:
        enabled: true
        replicas: 5

  imageCleaner:
    # Use 40GB as upper limit, size is given in bytes
    imageGCThresholdHigh: 40e9
    imageGCThresholdLow: 30e9
    imageGCThresholdType: "absolute"


grafana:
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'false'
    hosts:
      - grafana-mybinder.mybinder.ovh
    tls:
      - hosts:
          - grafana-mybinder.mybinder.ovh
        secretName: tls-crt
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: https://prometheus-mybinder.mybinder.ovh
          access: direct
          isDefault: true
          editable: false
  persistence:
    storageClassName: csi-cinder-high-speed

prometheus:
  server:
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: 'false'
      hosts:
        - prometheus-mybinder.mybinder.ovh
      tls:
        - hosts:
            - prometheus-mybinder.mybinder.ovh
          secretName: tls-crt


ingress-nginx:
  controller:
    hostNetwork: true
    replicaCount: 1
    # OVH host-networking requires ingress controller on node-1
    nodeSelector:
      kubernetes.io/hostname: node-1
  scope:
    enabled: false


static:
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'false'
    hosts:
      - static-mybinder.mybinder.ovh
    tls:
      secretName: tls-crt

redirector:
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'false'
    tls:
      secretName: tls-crt
  redirects:
    - type: host
      host:
        from: beta-binder.mybinder.ovh
        to: binder.mybinder.ovh
    - type: host
      host:
        from: docs-mybinder.mybinder.ovh
        to: mybinder.readthedocs.io
    - type: host
      host:
        from: playground-mybinder.mybinder.ovh
        to: play.nteract.io

matomo:
  enabled: false

analyticsPublisher:
  enabled: false

gcsProxy:
  enabled: false
